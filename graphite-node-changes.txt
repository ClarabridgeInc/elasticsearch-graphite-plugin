+node.breaker.accounting.estimated
+node.breaker.accounting.limit
+node.breaker.accounting.overhead
+node.breaker.accounting.trippedCount

-node.breaker.FIELDDATA.estimated
-node.breaker.FIELDDATA.limit
-node.breaker.FIELDDATA.overhead
-node.breaker.FIELDDATA.trippedCount

+node.breaker.fielddata.estimated
+node.breaker.fielddata.limit
+node.breaker.fielddata.overhead
+node.breaker.fielddata.trippedCount

+node.breaker.in_flight_requests.estimated
+node.breaker.in_flight_requests.limit
+node.breaker.in_flight_requests.overhead
+node.breaker.in_flight_requests.trippedCount

-node.breaker.PARENT.estimated
-node.breaker.PARENT.limit
-node.breaker.PARENT.overhead
-node.breaker.PARENT.trippedCount

+node.breaker.parent.estimated
+node.breaker.parent.limit
+node.breaker.parent.overhead
+node.breaker.parent.trippedCount

-node.breaker.REQUEST.estimated
-node.breaker.REQUEST.limit
-node.breaker.REQUEST.overhead
-node.breaker.REQUEST.trippedCount

+node.breaker.request.estimated
+node.breaker.request.limit
+node.breaker.request.overhead
+node.breaker.request.trippedCount

+node.completion.sizeInBytes

+node.discovery.queue.committed
+node.discovery.queue.pending
+node.discovery.queue.total

+node.docs.averageSizeInBytes
=node.docs.count
=node.docs.deleted
+node.docs.totalSizeInBytes

+node.fielddata.evictions
+node.fielddata.memorySizeInBytes

-node.filtercache.evictions
-node.filtercache.memorySizeInBytes

+node.flush.total
+node.flush.totalTimeInMillis

=node.fs0.available
-node.fs0.diskQueue
-node.fs0.diskReads
-node.fs0.diskReadsInBytes
-node.fs0.diskService
-node.fs0.diskWrites
-node.fs0.diskWritesInBytes
=node.fs0.free
=node.fs0.total

=node.get.current
=node.get.existsCount
=node.get.existsTimeInMillis
+node.get.getCount
+node.get.getTimeInMillis
=node.get.missingCount
=node.get.missingTimeInMillis

=node.http.serverOpen
=node.http.totalOpen

-node.idcache.memorySizeInBytes

=node.indexing._all.deleteCount
=node.indexing._all.deleteCurrent
=node.indexing._all.deleteTimeInMillis

=node.indexing._all.indexCount
=node.indexing._all.indexCurrent
=node.indexing._all.indexTimeInMillis

+node.indexing._all.noopUpdateCount
+node.indexing._all.throttleTimeInMillis

+node.ingest.total.ingestCount
+node.ingest.total.ingestCurrent
+node.ingest.total.ingestFailedCount
+node.ingest.total.ingestTimeInMillis

+node.io.iops.read
+node.io.iops.total
+node.io.iops.write
+node.io.readInKiloBytes
+node.io.writeInKiloBytes

+node.jvm.classes.loadedClassCount
+node.jvm.classes.totalLoadedClassCount
+node.jvm.classes.unloadedClassCount

=node.jvm.gc.old.collectionCount
=node.jvm.gc.old.collectionTimeSeconds
=node.jvm.gc.young.collectionCount
=node.jvm.gc.young.collectionTimeSeconds


=node.jvm.mem.heapCommitted
=node.jvm.mem.heapUsed
=node.jvm.mem.nonHeapCommitted
=node.jvm.mem.nonHeapUsed
=node.jvm.mem.pool.old.max
=node.jvm.mem.pool.old.peakMax
=node.jvm.mem.pool.old.peakUsed
=node.jvm.mem.pool.old.used
=node.jvm.mem.pool.survivor.max
=node.jvm.mem.pool.survivor.peakMax
=node.jvm.mem.pool.survivor.peakUsed
=node.jvm.mem.pool.survivor.used
=node.jvm.mem.pool.young.max
=node.jvm.mem.pool.young.peakMax
=node.jvm.mem.pool.young.peakUsed
=node.jvm.mem.pool.young.used
=node.jvm.threads.count
=node.jvm.threads.peakCount
=node.jvm.uptime

=node.merge.current
=node.merge.currentNumDocs
=node.merge.currentSizeInBytes
=node.merge.total
=node.merge.totalNumDocs
=node.merge.totalTimeInMillis

-node.network.tcp.activeOpens
-node.network.tcp.attemptFails
-node.network.tcp.currEstab
-node.network.tcp.estabResets
-node.network.tcp.inErrs
-node.network.tcp.inSegs
-node.network.tcp.outRsts
-node.network.tcp.outSegs
-node.network.tcp.passiveOpens
-node.network.tcp.retransSegs

+node.os.cgroup.cpuAcctUsageNanos
+node.os.cgroup.cpuCfsPeriodMicros
+node.os.cgroup.cpuCfsQuotaMicros
+node.os.cgroup.cpu.numberOfElapsedPeriods
+node.os.cgroup.cpu.numberOfTimesThrottled
+node.os.cgroup.cpu.timeThrottledNanos
+node.os.cgroup.memoryLimitInBytes
+node.os.cgroup.memoryUsageInBytes

+node.os.cpu.load_15_min
+node.os.cpu.load_1_min
+node.os.cpu.load_5_min
+node.os.cpu.percent

-node.os.cpu.idle
-node.os.cpu.sys
-node.os.cpu.user

-node.os.mem.actualFreeBytes
-node.os.mem.actualUsedBytes

=node.os.mem.freeBytes
=node.os.mem.freePercent

+node.os.mem.totalBytes

=node.os.mem.usedBytes
=node.os.mem.usedPercent

=node.os.swap.freeBytes
+node.os.swap.totalBytes
=node.os.swap.usedBytes

-node.percolate.count
-node.percolate.current
-node.percolate.memorySizeInBytes
-node.percolate.numQueries
-node.percolate.timeInMillis

=node.process.cpu.percent
-node.process.cpu.sysSeconds
-node.process.cpu.totalSeconds
+node.process.cpu.total_seconds
-node.process.cpu.userSeconds
+node.process.maxFileDescriptors
-node.process.mem.resident
-node.process.mem.share
=node.process.mem.totalVirtual
=node.process.openFileDescriptors

=node.querycache.evictions
=node.querycache.hitCount
=node.querycache.memorySizeInBytes
=node.querycache.missCount

+node.recovery.currentAsSource
+node.recovery.currentAsTarget
+node.recovery.throttleTimeInMillis

=node.refresh.total
=node.refresh.totalTimeInMillis
+node.refresh.waitingListeners

+node.requestCache.evictions
+node.requestCache.hitCount
+node.requestCache.memorySizeInBytes
+node.requestCache.missCount

+node.script.cacheEvictions
+node.script.compilations


=node.search._all.fetchCount
=node.search._all.fetchCurrent
=node.search._all.fetchTimeInMillis

=node.search._all.queryCount
=node.search._all.queryCurrent
=node.search._all.queryTimeInMillis

+node.search._all.scrollCount
+node.search._all.scrollCurrent
+node.search._all.scrollTimeInMillis

+node.search._all.suggestCount
+node.search._all.suggestCurrent
+node.search._all.suggestTimeInMillis

+node.search.openContexts

+node.segments.bitSetMemoryInBytes
=node.segments.count
+node.segments.docValuesMemory
-node.segments.fixedBitSetMemoryInBytes
-node.segments.indexWriterMaxMemoryInBytes
=node.segments.indexWriterMemoryInBytes
=node.segments.memoryInBytes
+node.segments.normsMemoryInBytes
+node.segments.pointsMemoryInBytes
+node.segments.storedFieldsMemoryInBytes
+node.segments.termsMemoryInBytes
+node.segments.termVectorsMemoryInBytes
=node.segments.versionMapMemoryInBytes

=node.store.sizeInBytes
-node.store.throttleTimeInNanos

+node.suggest.count
+node.suggest.current
+node.suggest.timeInMillis

=node.threadpool.bulk.active
=node.threadpool.bulk.completed
=node.threadpool.bulk.largest
=node.threadpool.bulk.queue
=node.threadpool.bulk.rejected
=node.threadpool.bulk.threads

=node.threadpool.fetch_shard_started.active
=node.threadpool.fetch_shard_started.completed
=node.threadpool.fetch_shard_started.largest
=node.threadpool.fetch_shard_started.queue
=node.threadpool.fetch_shard_started.rejected
=node.threadpool.fetch_shard_started.threads

=node.threadpool.fetch_shard_store.active
=node.threadpool.fetch_shard_store.completed
=node.threadpool.fetch_shard_store.largest
=node.threadpool.fetch_shard_store.queue
=node.threadpool.fetch_shard_store.rejected
=node.threadpool.fetch_shard_store.threads

=node.threadpool.flush.active
=node.threadpool.flush.completed
=node.threadpool.flush.largest
=node.threadpool.flush.queue
=node.threadpool.flush.rejected
=node.threadpool.flush.threads

+node.threadpool.force_merge.active
+node.threadpool.force_merge.completed
+node.threadpool.force_merge.largest
+node.threadpool.force_merge.queue
+node.threadpool.force_merge.rejected
+node.threadpool.force_merge.threads

=node.threadpool.generic.active
=node.threadpool.generic.completed
=node.threadpool.generic.largest
=node.threadpool.generic.queue
=node.threadpool.generic.rejected
=node.threadpool.generic.threads

=node.threadpool.get.active
=node.threadpool.get.completed
=node.threadpool.get.largest
=node.threadpool.get.queue
=node.threadpool.get.rejected
=node.threadpool.get.threads

=node.threadpool.index.active
=node.threadpool.index.completed
=node.threadpool.index.largest
=node.threadpool.index.queue
=node.threadpool.index.rejected
=node.threadpool.index.threads

=node.threadpool.listener.active
=node.threadpool.listener.completed
=node.threadpool.listener.largest
=node.threadpool.listener.queue
=node.threadpool.listener.rejected
=node.threadpool.listener.threads

=node.threadpool.management.active
=node.threadpool.management.completed
=node.threadpool.management.largest
=node.threadpool.management.queue
=node.threadpool.management.rejected
=node.threadpool.management.threads

-node.threadpool.merge.active
-node.threadpool.merge.completed
-node.threadpool.merge.largest
-node.threadpool.merge.queue
-node.threadpool.merge.rejected
-node.threadpool.merge.threads

-node.threadpool.optimize.active
-node.threadpool.optimize.completed
-node.threadpool.optimize.largest
-node.threadpool.optimize.queue
-node.threadpool.optimize.rejected
-node.threadpool.optimize.threads

-node.threadpool.percolate.active
-node.threadpool.percolate.completed
-node.threadpool.percolate.largest
-node.threadpool.percolate.queue
-node.threadpool.percolate.rejected
-node.threadpool.percolate.threads

=node.threadpool.refresh.active
=node.threadpool.refresh.completed
=node.threadpool.refresh.largest
=node.threadpool.refresh.queue
=node.threadpool.refresh.rejected
=node.threadpool.refresh.threads

=node.threadpool.search.active
=node.threadpool.search.completed
=node.threadpool.search.largest
=node.threadpool.search.queue
=node.threadpool.search.rejected
=node.threadpool.search.threads

=node.threadpool.snapshot.active
=node.threadpool.snapshot.completed
=node.threadpool.snapshot.largest
=node.threadpool.snapshot.queue
=node.threadpool.snapshot.rejected
=node.threadpool.snapshot.threads

-node.threadpool.suggest.active
-node.threadpool.suggest.completed
-node.threadpool.suggest.largest
-node.threadpool.suggest.queue
-node.threadpool.suggest.rejected
-node.threadpool.suggest.threads

=node.threadpool.warmer.active
=node.threadpool.warmer.completed
=node.threadpool.warmer.largest
=node.threadpool.warmer.queue
=node.threadpool.warmer.rejected
=node.threadpool.warmer.threads

+node.translog.estimatedNumberOfOperations
+node.translog.sizeInBytes
+node.translog.uncommittedOperations
+node.translog.uncommittedSizeInBytes

=node.transport.rxCount
=node.transport.rxSizeBytes

=node.transport.serverOpen

=node.transport.txCount
=node.transport.txSizeBytes

+node.warmer.current
+node.warmer.total
+node.warmer.totalTimeInMillis

+plugin.indexShardsStatsInMillis
+plugin.indicesServiceStatsInMillis
+plugin.nodeServiceStatsInMillis
+plugin.totalTimeInMillis


